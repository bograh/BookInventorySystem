@inject HttpClient Http
@inject NavigationManager NavigationManager

<h1>Add Book</h1>

<EditForm Model="@newBook" OnValidSubmit="@HandleSubmit">

    <div class="form-group">
        <label for="title">Title:</label>
        <InputText id="title" @bind-Value="newBook.Title" />
    </div>
    <div class="form-group">
        <label for="author">Author:</label>
        <InputText id="author" @bind-Value="newBook.Author" />
    </div>
    <div class="form-group">
        <label for="isbn">ISBN:</label>
        <InputText id="isbn" @bind-Value="newBook.ISBN" />
    </div>
    <div class="form-group">
        <label for="genre">Genre:</label>
        <InputText id="genre" @bind-Value="newBook.Genre" />
    </div>
    <div class="form-group">
        <label for="imageUrl">Image:</label>
        <InputText id="imageUrl" @bind-Value="newBook.ImageUrl" />
    </div>

    <button type="submit">Add Book</button>
</EditForm>


@code {
    private BookModel newBook = new BookModel(0, "", "", "", "", ""); // Initialize here

    private async Task HandleSubmit()
    {
        var response = await Http.PostAsJsonAsync<BookModel>("/books", newBook);

        if (response.IsSuccessStatusCode)
        {
            // Success! Show confirmation message
            // You can show a toast notification or navigate to another page
            NavigationManager.NavigateTo("/books");
        }
        else
        {
            // Error! Show error message
            // You can display the error message returned from the server
            // Example: ShowToast("Failed to add book. Please try again.", ToastType.Error);
        }
    }
}
